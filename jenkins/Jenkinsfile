pipeline {
    agent none
    
    environment {
        PORTS    = '4000:4000'
    }
    
    stages {
        stage('Stop and remove all docker containers') {
            agent {
                label 'ubuntu'
            }
            steps {
                sh 'docker stop $(docker ps -aq) && docker rm $(docker ps -aq)'
            }
        }
        stage('Build') {
            agent { 
                dockerfile {
                    filename "Dockerfile"
                    label 'ubuntu'
                    args '-p ${Ports}'
                    additionalBuildArgs "-t app:$BUILD_NUMBER"
                }
            }
            steps {
                sh 'npm install'
            }
        }
        stage('Test') {
            agent { 
                dockerfile {
                    filename "Dockerfile"
                    label 'ubuntu'
                    args '-p ${Ports}'
                    additionalBuildArgs "-t app:$BUILD_NUMBER"
                }
            }
            options {
                skipDefaultCheckout()
            }
            steps {
                sh './jenkins/scripts/test.sh'
            }
        }
        stage('Deliver') {
            agent { 
                dockerfile {
                    filename "Dockerfile"
                    label 'ubuntu'
                    args '-p ${Ports}'
                    additionalBuildArgs "-t app:$BUILD_NUMBER"
                }
            }
            options {
                skipDefaultCheckout()
            }
            steps {
                sh './jenkins/scripts/deliver.sh'
            }
        }
        stage('Run docker container') {
            agent {
                label 'ubuntu'
            }
            options {
                skipDefaultCheckout()
            }
            steps {
                sh 'docker run -d -p ${Ports} app:$BUILD_NUMBER'
            }
        }
    }
}
